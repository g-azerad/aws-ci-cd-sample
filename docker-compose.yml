services:
  api:
    image: counter-api:latest
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api
    stop_signal: SIGINT
    ports:
      - "5000:5000"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: user_db
      DB_PASSWORD: password
      DB_NAME: counter_db
      DEBUG_MODE: true
    depends_on:
      - db
    networks:
      - app_network

  db:
    image: postgres:17.2
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      DB_USER: user_db
      DB_PASSWORD: password
      DB_NAME: counter_db
    ports:
      - "5432:5432"
    volumes:
      - ./db/init-user-db.sh:/docker-entrypoint-initdb.d/1-init-user-db.sh:ro
      - db_data:/var/lib/postgresql/data
    networks:
      - app_network

  playwright:
    image: mcr.microsoft.com/playwright:v1.49.1-noble
    container_name: playwright-tests
    working_dir: /app
    volumes:
      - ./playwright/tests:/app/tests
      - ./playwright/run-tests.sh:/app/run-tests.sh
      - ./playwright/package.json:/app/package.json
      - ./playwright/package-lock.json:/app/package-lock.json
      - playwright_node_modules:/app/node_modules
      - playwright_cache:/app/.cache/ms-playwright
    entrypoint: ["/bin/bash", "/app/run-tests.sh"]
    depends_on:
      - api
    environment:
      API_URL: http://api:5000
      PLAYWRIGHT_BROWSERS_PATH: /app/.cache/ms-playwright
    networks:
      - app_network
    profiles:
      - donotstart

volumes:
  db_data:
  playwright_node_modules:
  playwright_cache:

networks:
  app_network:
    driver: bridge
